# configuration for test spm operation (write, erase, rww opr. bootloader section)

[_rule_]
rule = # rule for %(name)s on %(processor)s:
 %(name)s_%(processor)s_CCOPTS = -g -O2 -mmcu=%(processor)s -Wl,--section-start,.bootloader=%(bootldr)s,--section-start,.testpage=%(testpg)s
 %(name)s_%(processor)s_SIMOPTS = -d%(processor)s -W 0x20,- -e 0x22
 %(name)s_%(processor)s_SHELLOPTS = 0,0
 %(name)s_%(processor)s.elf: %(sources)s
 %(tab)s$(compile-and-link)

[_variables_]
testpg=0x1b00

[_atmega16_]
bootldr=0x1f80

[_atmega32_]
bootldr=0x3f00

[_atmega128_]
bootldr=0xfe00

[_atmega88_]
bootldr=0x0fa0
testpg=0x0a00

[writepage]
sources = writepage.c testutil.c writefunc.c
simtime = 0
processors = atmega16 atmega32 atmega128 atmega88
target = %(name)s_%(processor)s.report

[erasepage]
sources = erasepage.c testutil.c erasefunc.c
simtime = 0
processors = atmega16 atmega32 atmega128 atmega88
target = %(name)s_%(processor)s.report

# EOF
